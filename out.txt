

// Define Premain: 
Ipoison W8 (Const 0) 0	 	 // Line 0
%sp = %sp + 1
%sp = %sp * 8
%ax = 0x6e
*(%sp) = %ax
%sp = %sp + 8
*(%sp) = %bp
%bp = %sp
jmp 87


// Define factorial: 

// Just Name \factorial\: 
%sp = %sp + 40

// Name \factorial\_args: 
%bp = %bp + 16
*(%bp) = %3
%bp = %bp - 16
%bp = %bp + 24
*(%bp) = %4
%bp = %bp - 24
%bp = %bp + 32
*(%bp) = %5
%bp = %bp - 32
%5 = %bp - 16
%5 = *(%5)

// 1: 
%3 = %sp
%sp = %sp + 8

// factorial_1: 
%bp = %bp + 8
*(%bp) = %3
%bp = %bp - 8

// 1: 
%4 = %sp	 	 // Line 1
%sp = %sp + 8
*(%4) = %5	 	 // Line 2
%3 = *(%4)	 	 // Line 3
%5 = %3 && 0xffffffff	 	 // Line 4
%3 = 0
%3 = %3 && 0xffffffff
%3 = %5 == %3
if %3jmp 36	 	 // Line 5
jmp 41

// 6: 
%4 = 1

// factorial_6: 
%3 = %bp + 8	 	 // Line 0
%3 = *(%3)

// 6: 
*(%3) = %4	 	 // Line 5
jmp 74	 	 // Line 6

// 7: 
%3 = *(%4)
%5 = %3 && 0xffffffff	 	 // Line 7
%3 = 1
%3 = %3 && 0xffffffff
%3 = %5 == %3
if %3jmp 48	 	 // Line 8
jmp 53

// 10: 
%4 = 1

// factorial_10: 
%3 = %bp + 8	 	 // Line 0
%3 = *(%3)

// 10: 
*(%3) = %4	 	 // Line 8
jmp 74	 	 // Line 9

// 11: 
%5 = *(%4)
%3 = *(%4)	 	 // Line 10
%3 = %3 - 1	 	 // Line 11
*(%sp) = %3	 	 // Line 12
%sp = %sp + 8
%ax = 59
%ax = %ax + 6
*(%sp) = %ax
%sp = %sp + 8
*(%sp) = %bp
%bp = %sp
jmp 9
%sp = %bp
%bp = *(%sp)
%sp = %sp - 16
%3 = %ax
%4 = %5 * %3	 	 // Line 13

// factorial_11: 
%3 = %bp + 8	 	 // Line 0
%3 = *(%3)

// 11: 
*(%3) = %4	 	 // Line 14
jmp 74	 	 // Line 15

// factorial_17: 
%3 = %bp + 8	 	 // Line 0
%3 = *(%3)

// 17: 
%3 = *(%3)	 	 // Line 15
%ax = %3	 	 // Line 16
%3 = %bp + 16
%3 = *(%3)
%4 = %bp + 24
%4 = *(%4)
%5 = %bp + 32
%5 = *(%5)
%sp = %bp - 8
%sp = *(%sp)
jmp %sp


// Define main: 

// Just Name \main\: 
%sp = %sp + 8	 	 // Line 0

// 0: 
%4 = %sp	 	 // Line 16
%sp = %sp + 8
%3 = 0	 	 // Line 17
*(%4) = %3
%3 = *(8)	 	 // Line 18
*(%sp) = %3	 	 // Line 19
%sp = %sp + 8
%ax = 96
%ax = %ax + 6
*(%sp) = %ax
%sp = %sp + 8
*(%sp) = %bp
%bp = %sp
jmp 9
%sp = %bp
%bp = *(%sp)
%sp = %sp - 16
%3 = %ax
%ax = %3	 	 // Line 20
%sp = %bp - 8
%sp = *(%sp)
jmp %sp


// Define _ret_: 

// Just _ret_: 
ans %ax	 	 // Line 0
invalid program: Can't find a successor. 
ToNet = False. 
	 Filtered segments:[8]
	 Just successors:[8].
	 PC: 74.
	 Network matching the pc: Nothing