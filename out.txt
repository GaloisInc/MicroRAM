

// Define Premain: 
0.	Ipoison W8 (Const 0) 0	 	 // Line 0
1.	%sp = %sp + 1
2.	%sp = %sp * 8
3.	%ax = 0x6e
4.	*(%sp) = %ax
5.	%sp = %sp + 8
6.	*(%sp) = %bp
7.	%bp = %sp
8.	jmp 87


// Define factorial: 

// Just Name \factorial\: 
9.	%sp = %sp + 40

// Name \factorial\_args: 
10.	%bp = %bp + 16
11.	*(%bp) = %3
12.	%bp = %bp - 16
13.	%bp = %bp + 24
14.	*(%bp) = %4
15.	%bp = %bp - 24
16.	%bp = %bp + 32
17.	*(%bp) = %5
18.	%bp = %bp - 32
19.	%5 = %bp - 16
20.	%5 = *(%5)

// 1: 
21.	%3 = %sp
22.	%sp = %sp + 8

// factorial_1: 
23.	%bp = %bp + 8
24.	*(%bp) = %3
25.	%bp = %bp - 8

// 1: 
26.	%4 = %sp	 	 // Line 1
27.	%sp = %sp + 8
28.	*(%4) = %5	 	 // Line 2
29.	%3 = *(%4)	 	 // Line 3
30.	%5 = %3 && 0xffffffff	 	 // Line 4
31.	%3 = 0
32.	%3 = %3 && 0xffffffff
33.	%3 = %5 == %3
34.	if %3 jmp 36	 	 // Line 5
35.	jmp 41

// 6: 
36.	%4 = 1

// factorial_6: 
37.	%3 = %bp + 8	 	 // Line 0
38.	%3 = *(%3)

// 6: 
39.	*(%3) = %4	 	 // Line 5
40.	jmp 74	 	 // Line 6

// 7: 
41.	%3 = *(%4)
42.	%5 = %3 && 0xffffffff	 	 // Line 7
43.	%3 = 1
44.	%3 = %3 && 0xffffffff
45.	%3 = %5 == %3
46.	if %3 jmp 48	 	 // Line 8
47.	jmp 53

// 10: 
48.	%4 = 1

// factorial_10: 
49.	%3 = %bp + 8	 	 // Line 0
50.	%3 = *(%3)

// 10: 
51.	*(%3) = %4	 	 // Line 8
52.	jmp 74	 	 // Line 9

// 11: 
53.	%5 = *(%4)
54.	%3 = *(%4)	 	 // Line 10
55.	%3 = %3 - 1	 	 // Line 11
56.	*(%sp) = %3	 	 // Line 12
57.	%sp = %sp + 8
58.	%ax = 59
59.	%ax = %ax + 6
60.	*(%sp) = %ax
61.	%sp = %sp + 8
62.	*(%sp) = %bp
63.	%bp = %sp
64.	jmp 9
65.	%sp = %bp
66.	%bp = *(%sp)
67.	%sp = %sp - 16
68.	%3 = %ax
69.	%4 = %5 * %3	 	 // Line 13

// factorial_11: 
70.	%3 = %bp + 8	 	 // Line 0
71.	%3 = *(%3)

// 11: 
72.	*(%3) = %4	 	 // Line 14
73.	jmp 74	 	 // Line 15

// factorial_17: 
74.	%3 = %bp + 8	 	 // Line 0
75.	%3 = *(%3)

// 17: 
76.	%3 = *(%3)	 	 // Line 15
77.	%ax = %3	 	 // Line 16
78.	%3 = %bp + 16
79.	%3 = *(%3)
80.	%4 = %bp + 24
81.	%4 = *(%4)
82.	%5 = %bp + 32
83.	%5 = *(%5)
84.	%sp = %bp - 8
85.	%sp = *(%sp)
86.	jmp %sp


// Define main: 

// Just Name \main\: 
87.	%sp = %sp + 8	 	 // Line 0

// 0: 
88.	%4 = %sp	 	 // Line 16
89.	%sp = %sp + 8
90.	%3 = 0	 	 // Line 17
91.	*(%4) = %3
92.	%3 = *(8)	 	 // Line 18
93.	*(%sp) = %3	 	 // Line 19
94.	%sp = %sp + 8
95.	%ax = 96
96.	%ax = %ax + 6
97.	*(%sp) = %ax
98.	%sp = %sp + 8
99.	*(%sp) = %bp
100.	%bp = %sp
101.	jmp 9
102.	%sp = %bp
103.	%bp = *(%sp)
104.	%sp = %sp - 16
105.	%3 = %ax
106.	%ax = %3	 	 // Line 20
107.	%sp = %bp - 8
108.	%sp = *(%sp)
109.	jmp %sp


// Define _ret_: 

// Just _ret_: 
110.	ans %ax	 	 // Line 0
invalid program: Can't find a successor. 
ToNet = False. 
	 Filtered segments:[]
	 unfiltered segments:[8]
	 Just successors:[8].
	 PC: 74.
	 Network matching the pc: Nothing